<Activity mc:Ignorable="sap sap2010" x:Class="test_tc1" this:test_tc1.generarInforme="Si" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="fechaFinal" Type="InArgument(x:String)" />
    <x:Property Name="generarInforme" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>799.2,9312</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>test_tc1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="test_tc1" sap:VirtualizedContainerService.HintSize="809.6,9247.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pdfText" />
      <Variable x:TypeArguments="x:Boolean" Name="invalidarNumeroLiquidacion" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="importeLiquidacionTotales" />
      <Variable x:TypeArguments="x:Boolean" Name="invalidarImporteLiquidacion" />
      <Variable x:TypeArguments="x:String" Name="CollectionNumeroLiquidacion" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Read_PDF" sap:VirtualizedContainerService.HintSize="747.2,9135.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="empresaExists" />
        <Variable x:TypeArguments="x:Boolean" Name="CIFexists" />
        <Variable x:TypeArguments="x:Boolean" Name="l00Exists" />
        <Variable x:TypeArguments="x:Boolean" Name="numeroLiquidacionExists" />
        <Variable x:TypeArguments="x:Boolean" Name="fechaExists" />
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="listFechas" />
        <Variable x:TypeArguments="x:Boolean" Name="validacionExists" />
        <Variable x:TypeArguments="x:Boolean" Name="regexFecha1" />
        <Variable x:TypeArguments="x:Boolean" Name="regexFecha2" />
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="listFechas2" />
        <Variable x:TypeArguments="x:Boolean" Name="liquidoTotalExists" />
        <Variable x:TypeArguments="x:String" Name="numeroLiquidacion" />
        <Variable x:TypeArguments="x:String" Name="liquidoTotal" />
        <Variable x:TypeArguments="x:String" Name="pdfText2" />
        <Variable x:TypeArguments="x:Boolean" Name="l13exists" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="684.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Start: Read_PDF&quot;]" />
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="684.8,250.4" sap2010:WorkflowViewState.IdRef="CommentOut_2">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_43">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="Data\rlcpagosmas2pag.pdf" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[pdfText]" />
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="C:\RPA\Documento.pdf" sap:VirtualizedContainerService.HintSize="684.8,134.4" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[pdfText]">
        <ui:ReadPDFWithOCR.OCREngine>
          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
            <ActivityFunc.Argument>
              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
            </ActivityFunc.Argument>
            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Language="spa" />
          </ActivityFunc>
        </ui:ReadPDFWithOCR.OCREngine>
      </ui:ReadPDFWithOCR>
      <Assign DisplayName="Assign pdf text to upper" sap:VirtualizedContainerService.HintSize="684.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[pdfText]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[pdfText.Replace(Environment.NewLine, " ").ToUpper]</InArgument>
        </Assign.Value>
      </Assign>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="684.8,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="[pdfText]" />
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="684.8,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="572.8,466.4" sap2010:WorkflowViewState.IdRef="Sequence_45">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[pdfText.Contains(&quot;L13&quot;)]" DisplayName="If L00 exists" sap:VirtualizedContainerService.HintSize="510.4,354.4" sap2010:WorkflowViewState.IdRef="If_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[l13exists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_37">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[l13exists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <If Condition="[pdfText.Contains(&quot;L00&quot;)]" DisplayName="If L00 exists" sap:VirtualizedContainerService.HintSize="684.8,525.6" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[l00Exists]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[l00Exists]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="684.8,272" sap2010:WorkflowViewState.IdRef="CommentOut_3">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_44">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[pdfText2]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[split(pdfText," ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS")(1)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <If Condition="[pdfText.Contains(&quot;NÚMERO DE LIQUIDACIÓN:&quot;)]" DisplayName="If pdf contiene numero liquidacion" sap:VirtualizedContainerService.HintSize="684.8,2366.4" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="651.2,2012" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesNumeroLiquidacion" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="NÚMERODELIQUIDACIÓN:(\d+)CÓDIGODECUENTA" sap:VirtualizedContainerService.HintSize="608,60" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[pdfText.Replace(&quot;|&quot;,&quot;&quot;).Replace(&quot; &quot;,&quot;&quot;)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;NÚMERODELIQUIDACIÓN:&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;DIG&quot;,&quot;OperationName&quot;:&quot;Digit&quot;,&quot;OperationValue&quot;:&quot;\\d&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;CÓDIGODECUENTA&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="NÚMERODELIQUIDACIÓN:(\d+)CÓDIGODECUENTA" RegexOption="IgnoreCase, Compiled" Result="[matchesNumeroLiquidacion]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="608,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[matchesNumeroLiquidacion.Count.ToString]" />
            <Assign sap:VirtualizedContainerService.HintSize="608,81.6" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CollectionNumeroLiquidacion]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="608,1570.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[matchesNumeroLiquidacion]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="str:Match">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="str:Match" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572.8,1445.6" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="numeroLiquidacionTotales" />
                      <Variable x:TypeArguments="x:String" Name="variable1" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[currentItem.ToString]" />
                    <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[numeroLiquidacion]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[split(split(currentItem.ToString,"NÚMERODELIQUIDACIÓN:")(1),"CÓDIGODECUENTA")(0).Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[numeroLiquidacion]" />
                    <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[CollectionNumeroLiquidacion]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CollectionNumeroLiquidacion + "," + numeroLiquidacion]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Matches sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="Matches_6" Input="[pdfText.Replace(&quot;-&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;.&quot;,&quot;&quot;)]" IsBuilderTabModified="False" Pattern="[numeroLiquidacion]" RegexOption="IgnoreCase, Compiled" Result="[numeroLiquidacionTotales]" />
                    <If Condition="[numeroLiquidacionTotales.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="510.4,729.6" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="valido" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,366.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign dni exists false" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[invalidarNumeroLiquidacion]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="numero liquidacion no encontrado" />
                          <ui:Break sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="Break_1" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign dni exists false" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[invalidarNumeroLiquidacion]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <ui:WriteCell Cell="A1" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="684.8,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Tesserac OCR" Text="[CollectionNumeroLiquidacion]" WorkbookPath="Data\ejemplo.xlsx" />
      <If Condition="[pdfText.Contains(&quot;ESTE RECIBO NO IMPLICA EL PAGO&quot;)]" DisplayName="If pdf contiene liquido total" sap:VirtualizedContainerService.HintSize="684.8,2207.2" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="651.2,1852.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesLiquido" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesLiquidoTotal" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="608,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[liquidoTotal]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(split(pdfText.Replace(" VALIDACIÓN MECÁNICA / SELLO DE LAS ENTIDADES FINANCIERAS.",""),"  ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS")(0)," ").Last]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:Matches BuilderPattern="[\d\.,]+(?=\s+ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS)+" sap:VirtualizedContainerService.HintSize="608,60" sap2010:WorkflowViewState.IdRef="Matches_9" Input="[pdfText.Replace(&quot; VALIDACIÓN MECÁNICA / SELLO DE LAS ENTIDADES FINANCIERAS.&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;).Replace(&quot;)&quot;,&quot;&quot;)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[\\d\\.,]+(?=\\s+ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS)&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[\d\.,]+(?=\s+ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS)+" RegexOption="IgnoreCase, Compiled" Result="[matchesLiquidoTotal]" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="608,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_42">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches BuilderPattern="\s+(\d*)\sESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="Matches_7" Input="[pdfText.Replace(&quot; VALIDACIÓN MECÁNICA / SELLO DE LAS ENTIDADES FINANCIERAS.&quot;,&quot;&quot;)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;WHITESP&quot;,&quot;OperationName&quot;:&quot;Whitespace&quot;,&quot;OperationValue&quot;:&quot;\\s&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;DIG&quot;,&quot;OperationName&quot;:&quot;Digit&quot;,&quot;OperationValue&quot;:&quot;\\d&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;WHITESP&quot;,&quot;OperationName&quot;:&quot;Whitespace&quot;,&quot;OperationValue&quot;:&quot;\\s&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:3,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;ESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\s+(\d*)\sESTE RECIBO NO IMPLICA EL PAGO DE LAS CUOTAS" RegexOption="IgnoreCase, Compiled" Result="[matchesLiquidoTotal]" />
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="608,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[matchesLiquidoTotal.Count.ToString]" />
            <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="608,1318.4" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[matchesLiquidoTotal]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="str:Match">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="str:Match" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="572.8,1193.6" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="numeroLiquidacionTotales" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[liquidoTotal]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[currentItem.ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="510.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="[liquidoTotal]" />
                    <ui:Matches sap:VirtualizedContainerService.HintSize="510.4,60" sap2010:WorkflowViewState.IdRef="Matches_8" Input="[pdfText.replace(&quot;,&quot;,&quot;.&quot;)]" IsBuilderTabModified="False" Pattern="[liquidoTotal.replace(&quot;,&quot;,&quot;.&quot;)]" RegexOption="IgnoreCase, Compiled" Result="[importeLiquidacionTotales]" />
                    <If Condition="[importeLiquidacionTotales.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="510.4,729.6" sap2010:WorkflowViewState.IdRef="If_20">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="valido" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,366.4" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign dni exists false" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[invalidarImporteLiquidacion]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="importe liquidacion no encontrado" />
                          <ui:Break sap:VirtualizedContainerService.HintSize="433.6,24.8" sap2010:WorkflowViewState.IdRef="Break_2" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign dni exists false" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_25">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[invalidarImporteLiquidacion]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[pdfText.Replace(&quot;-&quot;,&quot;&quot;).Replace(&quot;Á&quot;,&quot;A&quot;).Replace(&quot;È&quot;,&quot;E&quot;).Replace(&quot;À&quot;,&quot;A&quot;).Replace(&quot;É&quot;,&quot;E&quot;).Replace(&quot;Ó&quot;,&quot;O&quot;).Replace(&quot;Ò&quot;,&quot;O&quot;).Replace(&quot;Ì&quot;,&quot;I&quot;).Replace(&quot;Í&quot;,&quot;I&quot;).Replace(&quot;Ú&quot;,&quot;U&quot;).Replace(&quot;Ù&quot;,&quot;U&quot;).Contains(&quot;PERIODO DE LIQUIDACION&quot;)]" DisplayName="If pdf contiene autonomo" sap:VirtualizedContainerService.HintSize="684.8,1253.6" sap2010:WorkflowViewState.IdRef="If_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="576,988" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="532.8,898.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="496,667.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign pdf text separador" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[fechaFinal]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[split(pdfText,"PERÍODO DE LIQUIDACIÓN")(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Matches BuilderPattern="(\d{1,2})[/](\d{4})" DisplayName="Matches regex 2 con separador" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[pdfText.Replace(&quot;-&quot;,&quot;/&quot;).Replace(&quot;.&quot;,&quot;/&quot;).Replace(&quot; &quot;,&quot;&quot;).Trim]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;DIG&quot;,&quot;OperationName&quot;:&quot;Digit&quot;,&quot;OperationValue&quot;:&quot;\\d&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;BXYT&quot;,&quot;QuantifierName&quot;:&quot;Between x and y times&quot;,&quot;QuantifierSecondValue&quot;:&quot;2&quot;},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;ONEOF&quot;,&quot;OperationName&quot;:&quot;One of&quot;,&quot;OperationValue&quot;:&quot;\/&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;DIG&quot;,&quot;OperationName&quot;:&quot;Digit&quot;,&quot;OperationValue&quot;:&quot;\\d&quot;,&quot;QuantifierFirstValue&quot;:&quot;4&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(\d{1,2})[/](\d{4})" RegexOption="IgnoreCase, Compiled" Result="[listFechas]" />
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[listFechas(0).ToString]" />
                  <Assign DisplayName="Assign dni exists true" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[fechaFinal]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[listFechas(0).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign dni exists true" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[fechaFinal]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["01/" + fechaFinal]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="449.6,104.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
              <TryCatch.Finally>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Finalizar Regex 1&quot;]" />
              </TryCatch.Finally>
            </TryCatch>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[generarInforme = &quot;Si&quot;]" sap:VirtualizedContainerService.HintSize="684.8,967.2" sap2010:WorkflowViewState.IdRef="If_11">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="377.6,701.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;L13: &quot; + l13Exists.ToString]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[fechaFinal]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;L00: &quot; + l00Exists.ToString]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Invalidar numero liquidacion: &quot; + invalidarNumeroLiquidacion.ToString]" />
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="[&quot;Invalidar importe liquidacion: &quot; + invalidarImporteLiquidacion.ToString]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="684.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;End: Read_PDF&quot;]" />
    </Sequence>
  </Sequence>
</Activity>